{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rozababayan/Desktop/MyStudy/React/NextJS/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add New Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add a new meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n      onAddMeetup: addMeetupHandler,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //Get Connceted to DB\n  const client = await MongoClient.connect(\"mongodb+srv://RozaB:Mymongodb6724!@cluster0.yc593od.mongodb.net/meetups?retryWrites=true&w=majority\"); //Step1\n\n  const db = client.db(); //Step2\n\n  const meetupsCollection = db.collection(\"meetups\"); //Step3\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId); //Get Connceted to DB\n\n  const client = await MongoClient.connect(\"mongodb+srv://RozaB:Mymongodb6724!@cluster0.yc593od.mongodb.net/meetups?retryWrites=true&w=majority\"); //Step1\n\n  const db = client.db(); //Step2\n\n  const meetupsCollection = db.collection(\"meetups\"); //Step3\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        title: selectedMeetup.title\n      } //  {\n      //   id: meetupId,\n      //   image:\n      //     \"https://uscvillage.com/wp-content/uploads/2018/08/Facebook_USCVILLAGE_OpenGraph_Homepage_v1.jpg\",\n      //   title: \"A First meetup\",\n      //   address: \"3301 S Hoover St, Los Angeles, CA 90007\",\n      //   description: \"The meetup description\",\n      // },\n\n    },\n    revalidate: 1\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/rozababayan/Desktop/MyStudy/React/NextJS/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","ObjectId","MeetupDetails","props","addMeetupHandler","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","selectedMeetup","findOne","id","revalidate"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <Head>\n        <title>Add New Meetups</title>\n        <meta name=\"description\" content=\"Add a new meetup\" />\n      </Head>\n      <NewMeetupForm onAddMeetup={addMeetupHandler}> </NewMeetupForm>;\n    </Fragment>\n  );\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    ></MeetupDetail>\n  );\n}\n\nexport async function getStaticPaths() {\n  //Get Connceted to DB\n  const client = await MongoClient.connect(\n    \"mongodb+srv://RozaB:Mymongodb6724!@cluster0.yc593od.mongodb.net/meetups?retryWrites=true&w=majority\"\n  ); //Step1\n  const db = client.db(); //Step2\n  const meetupsCollection = db.collection(\"meetups\"); //Step3\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  //fetch data for single meetup\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n\n  //Get Connceted to DB\n  const client = await MongoClient.connect(\n    \"mongodb+srv://RozaB:Mymongodb6724!@cluster0.yc593od.mongodb.net/meetups?retryWrites=true&w=majority\"\n  ); //Step1\n  const db = client.db(); //Step2\n  const meetupsCollection = db.collection(\"meetups\"); //Step3\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description,\n        title: selectedMeetup.title,\n      },\n      //  {\n      //   id: meetupId,\n      //   image:\n      //     \"https://uscvillage.com/wp-content/uploads/2018/08/Facebook_USCVILLAGE_OpenGraph_Homepage_v1.jpg\",\n      //   title: \"A First meetup\",\n      //   address: \"3301 S Hoover St, Los Angeles, CA 90007\",\n      //   description: \"The meetup description\",\n      // },\n    },\n    revalidate: 1,\n  };\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}